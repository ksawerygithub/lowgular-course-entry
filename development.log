[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 470
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "dDKIvnNEFX",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 470
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "dDKIvnNEFX",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 470
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "A_mYpxpPcl",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 470
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "A_mYpxpPcl",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<MyEmployeeModel>"
					},
					{
						"name": "Observable<MyEmployeeModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<MyEmployeeResponse>"
					},
					{
						"name": "Observable<MyEmployeeResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<MyEmployeeModel>"
					},
					{
						"name": "Observable<MyEmployeeModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<MyEmployeeResponse>"
					},
					{
						"name": "Observable<MyEmployeeResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "delete",
		"params": {
			"number": "string"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "A_mYpxpPcl",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"name": "delete",
		"params": {
			"number": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "delete",
		"params": {
			"number": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"name": "delete",
		"params": {
			"number": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "_3uiuJovLA",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee/my-employee.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "MyEmployeeForm",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "_3uiuJovLA",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee/my-employee.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "MyEmployeeForm",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "MyEmployeeForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "MyEmployeeForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"position": 328
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "R-t3TKRxqt",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"position": 328
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "R-t3TKRxqt",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"name": "MyEmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"name": "MyEmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"injectingPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "R-t3TKRxqt",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"injectingPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"injectingFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"injectingFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"position": 470
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "JJQybayqIw",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"position": 470
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for angular-component/form-properties/add: {
	"action": "angular-component/form-properties/add",
	"params": {
		"propertyName": "form",
		"componentFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"fields": {
			"name": "text",
			"age": "text",
			"salary": "text"
		}
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "JJQybayqIw",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"propertyName": "form",
		"fields": {
			"name": "text",
			"age": "text",
			"salary": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Calling Command angular-component/form-properties/add: {
	"funcParams": {
		"propertyName": "form",
		"componentFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"fields": {
			"name": "text",
			"age": "text",
			"salary": "text"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/form-properties/add"
}
[info] [EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED: {
	"type": "SMART_COMPONENT_FORM_ADDED",
	"payload": {
		"componentFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"componentName": "MyEmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED"
}
[info] [EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED: {
	"event": {
		"componentFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"componentName": "MyEmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED"
}
[info] [CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "MyEmployeeFormComponentModule",
				"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "MyEmployeeFormComponentModule",
				"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"propertyName": "form",
		"fields": {
			"name": "text",
			"age": "text",
			"salary": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Called Command angular-component/form-properties/add: {
	"message": "[CLI] Called Command angular-component/form-properties/add",
	"level": "info"
}
[info] [API] Response ok: angular-component/form-properties/add: {
	"result": {
		"filePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/form-properties/add"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
		"position": 0
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "ITQo_EpKDI",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeFormComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
		"position": 0
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeFormComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for angular-component/list: {
	"action": "angular-component/list",
	"params": {
		"componentHtmlFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "ITQo_EpKDI",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/list"
}
[info] [API] Response ok: angular-component/list: {
	"result": [
		{
			"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/app.component.ts",
			"selector": "app-root",
			"name": "AppComponent"
		},
		{
			"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee/my-employee.component.ts",
			"selector": "app-my-employee",
			"name": "MyEmployeeComponent"
		},
		{
			"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
			"selector": "app-my-employee-form",
			"name": "MyEmployeeFormComponent"
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/list"
}
[info] [CLI] Calling Query angular-component/list: {
	"funcParams": {
		"componentHtmlFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/list"
}
[info] [CLI] Called Query angular-component/list: {
	"result": [
		{
			"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/app.component.ts",
			"selector": "app-root",
			"name": "AppComponent"
		},
		{
			"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee/my-employee.component.ts",
			"selector": "app-my-employee",
			"name": "MyEmployeeComponent"
		},
		{
			"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
			"selector": "app-my-employee-form",
			"name": "MyEmployeeFormComponent"
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/list"
}
[info] [API] Request for component-modules/module-list: {
	"action": "component-modules/module-list",
	"params": {
		"componentHtmlPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "ITQo_EpKDI",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for component-modules/module-list"
}
[info] [CLI] Calling Query component-modules/module-list: {
	"funcParams": {
		"componentHtmlPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html"
	},
	"level": "info",
	"message": "[CLI] Calling Query component-modules/module-list"
}
[info] [CLI] Called Query component-modules/module-list: {
	"result": {
		"name": "MyEmployeeFormComponent",
		"modules": [
			{
				"name": "MyEmployeeFormComponentModule",
				"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query component-modules/module-list"
}
[info] [API] Response ok: component-modules/module-list: {
	"result": {
		"name": "MyEmployeeFormComponent",
		"modules": [
			{
				"name": "MyEmployeeFormComponentModule",
				"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: component-modules/module-list"
}
[info] [API] Request for component-modules/dependency-module-list: {
	"action": "component-modules/dependency-module-list",
	"params": {
		"componentPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "ITQo_EpKDI",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for component-modules/dependency-module-list"
}
[info] [CLI] Calling Query component-modules/dependency-module-list: {
	"funcParams": {
		"componentPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query component-modules/dependency-module-list"
}
[info] [CLI] Called Query component-modules/dependency-module-list: {
	"result": [
		{
			"name": "MyEmployeeFormComponent",
			"modules": [
				{
					"name": "MyEmployeeFormComponentModule",
					"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
				}
			]
		},
		{
			"name": "MyEmployeeService",
			"modules": [
				{
					"name": "MyEmployeeServiceModule",
					"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service-module.ts"
				}
			]
		}
	],
	"level": "info",
	"message": "[CLI] Called Query component-modules/dependency-module-list"
}
[info] [API] Response ok: component-modules/dependency-module-list: {
	"result": [
		{
			"name": "MyEmployeeFormComponent",
			"modules": [
				{
					"name": "MyEmployeeFormComponentModule",
					"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
				}
			]
		},
		{
			"name": "MyEmployeeService",
			"modules": [
				{
					"name": "MyEmployeeServiceModule",
					"path": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service-module.ts"
				}
			]
		}
	],
	"level": "info",
	"message": "[API] Response ok: component-modules/dependency-module-list"
}
[info] [API] Request for component-modules/import-component: {
	"action": "component-modules/import-component",
	"params": {
		"modulePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts",
		"moduleToImportPaths": [
			"C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts",
			"C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service-module.ts"
		]
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "ITQo_EpKDI",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for component-modules/import-component"
}
[error] [API]: Error Attempted to get information from a node that was removed or forgotten.

Node text: @NgModule({
  imports: [ReactiveFormsModule],
  declarations: [MyEmployeeFormComponent],
  providers...: {
	"loggerData": {
		"action": "component-modules/import-component",
		"params": {
			"modulePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts",
			"moduleToImportPaths": [
				"C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts",
				"C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service-module.ts"
			]
		},
		"context": {
			"workspace": {
				"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
			},
			"userContext": {
				"id": "9Z2Nqyu7j4",
				"correlationId": "ITQo_EpKDI",
				"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
				"logEnvId": "development"
			}
		}
	},
	"error": {},
	"stack": "Error: Attempted to get information from a node that was removed or forgotten.\n\nNode text: @NgModule({\n  imports: [ReactiveFormsModule],\n  declarations: [MyEmployeeFormComponent],\n  providers...\n    at ClassDeclaration.get compilerNode [as compilerNode] (C:\\Users\\pawli\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\node_modules\\ts-morph\\dist\\ts-morph.js:2969:19)\n    at ClassDeclaration.getNameNode (C:\\Users\\pawli\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\node_modules\\ts-morph\\dist\\ts-morph.js:9444:63)\n    at ClassDeclaration.getName (C:\\Users\\pawli\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\node_modules\\ts-morph\\dist\\ts-morph.js:9451:37)\n    at importComponentCommandHandler (C:\\Users\\pawli\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:3683:127)\n    at async dispatchCommand (C:\\Users\\pawli\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:8488:26)\n    at async callCommandCli (C:\\Users\\pawli\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:8532:20)\n    at async callHandler (C:\\Users\\pawli\\AppData\\Roaming\\JetBrains\\WebStorm2022.2\\plugins\\LowgularJPlugin\\cli\\main.js:16678:27)",
	"level": "error",
	"message": "[API]: Error Attempted to get information from a node that was removed or forgotten.\n\nNode text: @NgModule({\n  imports: [ReactiveFormsModule],\n  declarations: [MyEmployeeFormComponent],\n  providers..."
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
		"position": 0
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "A-iJB0Khk7",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeFormComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
		"position": 0
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeFormComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for angular-component/properties/list: {
	"action": "angular-component/properties/list",
	"params": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "A-iJB0Khk7",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/properties/list"
}
[info] [API] Response ok: angular-component/properties/list: {
	"result": [
		{
			"label": "form",
			"templateType": "forms",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/properties/list"
}
[info] [CLI] Calling Query angular-component/properties/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/properties/list"
}
[info] [CLI] Called Query angular-component/properties/list: {
	"result": [
		{
			"label": "form",
			"templateType": "forms",
			"typeProperties": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/properties/list"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "forms"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "A-iJB0Khk7",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "form",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "forms"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "form",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for angular-component/templates/add-form: {
	"action": "angular-component/templates/add-form",
	"params": {
		"componentHtmlFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
		"position": 0,
		"propertyName": "form",
		"formTemplate": "form"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "A-iJB0Khk7",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/add-form"
}
[info] [CLI] Calling Command angular-component/templates/add-form: {
	"funcParams": {
		"componentHtmlFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
		"position": 0,
		"propertyName": "form",
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-form"
}
[info] [CommandBus]: Dispatching command AddFormToTemplateCommand: {
	"commandName": "AddFormToTemplateCommand",
	"payload": {
		"workspaceRoot": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
		"componentTs": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"componentHtml": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
		"className": "MyEmployeeFormComponent",
		"propertyName": "form",
		"position": 0,
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddFormToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddFormToTemplateCommand: {
	"commandName": "AddFormToTemplateCommand",
	"payload": {
		"workspaceRoot": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
		"componentTs": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.ts",
		"componentHtml": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html",
		"className": "MyEmployeeFormComponent",
		"propertyName": "form",
		"position": 0,
		"formTemplate": "form"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddFormToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-form: {
	"message": "[CLI] Called Command angular-component/templates/add-form",
	"level": "info"
}
[info] [API] Response ok: angular-component/templates/add-form: {
	"result": {
		"filePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component.html"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/add-form"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui/my-employee-form/my-employee-form.component-module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 1243
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "pJeuPs5CoC",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 1243
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "pJeuPs5CoC",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<MyEmployeeModel>"
					},
					{
						"name": "Observable<MyEmployeeModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<MyEmployeeResponse>"
					},
					{
						"name": "Observable<MyEmployeeResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<MyEmployeeModel>"
					},
					{
						"name": "Observable<MyEmployeeModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<MyEmployeeResponse>"
					},
					{
						"name": "Observable<MyEmployeeResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 1241
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "uKqFUOAIZm",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 1241
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "uKqFUOAIZm",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<MyEmployeeModel>"
					},
					{
						"name": "Observable<MyEmployeeModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<MyEmployeeResponse>"
					},
					{
						"name": "Observable<MyEmployeeResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<MyEmployeeModel>"
					},
					{
						"name": "Observable<MyEmployeeModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<MyEmployeeResponse>"
					},
					{
						"name": "Observable<MyEmployeeResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 1241
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "IYFuOeEywg",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"position": 1241
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "MyEmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"delete"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "IYFuOeEywg",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<MyEmployeeModel>"
					},
					{
						"name": "Observable<MyEmployeeModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<MyEmployeeResponse>"
					},
					{
						"name": "Observable<MyEmployeeResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<MyEmployeeModel>"
					},
					{
						"name": "Observable<MyEmployeeModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<MyEmployeeResponse>"
					},
					{
						"name": "Observable<MyEmployeeResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "create",
		"params": {
			"MyEmployee": "MyEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "IYFuOeEywg",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "create",
		"params": {
			"MyEmployee": "MyEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"name": "create",
		"params": {
			"MyEmployee": "MyEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts",
		"name": "create",
		"params": {
			"MyEmployee": "MyEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/services/my-employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "dfhrOGF00Y",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "createMyEmployee",
		"properties": {
			"name": "string",
			"age": "string",
			"salary": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry"
		},
		"userContext": {
			"id": "9Z2Nqyu7j4",
			"correlationId": "dfhrOGF00Y",
			"clickedPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "createMyEmployee",
		"properties": {
			"name": "string",
			"age": "string",
			"salary": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/model",
		"name": "createMyEmployee",
		"suffix": "Model",
		"properties": {
			"name": "string",
			"age": "string",
			"salary": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/model",
		"name": "createMyEmployee",
		"suffix": "Model",
		"properties": {
			"name": "string",
			"age": "string",
			"salary": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "C:/Users/pawli/Desktop/Ksawery/program/lowgular-course-entry/src/app/model/create-my-employee.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
